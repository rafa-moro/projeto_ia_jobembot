# app.py
from flask import Flask, request, jsonify
import os
from dotenv import load_dotenv
import google.generativeai as genai

load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
if not GEMINI_API_KEY:
    raise ValueError("Chave GEMINI_API_KEY n√£o encontrada no arquivo .env!")

genai.configure(api_key=GEMINI_API_KEY)

# Otimiza√ß√£o: Carrega o contexto uma √∫nica vez ao iniciar a API
try:
    with open("conteudo_site.txt", "r", encoding="utf-8") as f:
        conteudo_site_global = f.read()
    print("‚úÖ Contexto do site carregado na mem√≥ria.")
except FileNotFoundError:
    print("‚ö†Ô∏è ATEN√á√ÉO: Arquivo 'conteudo_site.txt' n√£o encontrado. Rode 'python raspar_site.py' primeiro.")
    conteudo_site_global = ""

app = Flask(__name__)

@app.route('/')
def home():
    return "API do Jovem Programador (vers√£o melhorada) no ar!"

@app.route('/perguntar', methods=['POST'])
def perguntar():
    data = request.get_json()
    pergunta = data.get("pergunta")
    if not pergunta:
        return jsonify({"erro": "Pergunta n√£o fornecida."}), 400

    try:
        # Usamos um prompt robusto com regras claras.
        prompt = f"""
Voc√™ √© um assistente virtual especialista no Programa Jovem Programador. Seu tom de voz √© amig√°vel e prestativo.

--- REGRAS OBRIGAT√ìRIAS ---
1.  **FOCO ESTRITO:** Responda usando APENAS o CONTE√öDO DE REFER√äNCIA abaixo. N√£o use conhecimento externo.

2.  **REGRA DA IDADE (MUITO IMPORTANTE):** O requisito √© ter **16 anos ou mais**. N√£o existe idade m√°xima.
    - Se o usu√°rio **PERGUNTAR** qual a idade (ex: "qual a idade?", "a partir de quantos anos?"), responda que a idade m√≠nima √© 16 anos.
    - Se o usu√°rio **AFIRMAR** a pr√≥pria idade (ex: "tenho 29 anos", "tenho 15 anos"), trate isso como uma verifica√ß√£o de elegibilidade.
        - Se a idade for 16 ou mais, responda positivamente de forma personalizada. Ex: "Com 29 anos, voc√™ atende perfeitamente ao requisito de idade! üëç"
        - Se a idade for menor que 16, responda de forma emp√°tica. Ex: "Que legal seu interesse! Para participar, √© preciso ter 16 anos. Falta muito para o seu anivers√°rio?"

3.  **PROIBI√á√ÉO DE ASSUNTOS EXTERNOS:** Se a pergunta n√£o se encaixar na REGRA DA IDADE e for sobre qualquer tema n√£o contido no texto (futebol, pol√≠tica, etc.), responda EXATAMENTE: 'Desculpe, minha fun√ß√£o √© responder apenas sobre o Programa Jovem Programador.'

4.  **PROATIVIDADE FOCADA:** Ao final de cada resposta, fa√ßa uma pergunta para guiar o usu√°rio, como "Isso ajuda? Gostaria de saber sobre as cidades ou sobre o hackathon?".

5.  **FORMATA√á√ÉO:** Use par√°grafos curtos, emojis para destacar informa√ß√µes importantes.

--- CONTE√öDO DE REFER√äNCIA ---
{conteudo_site_global}
--- FIM DO CONTE√öDO DE REFER√äNCIA ---

PERGUNTA DO USU√ÅRIO: "{pergunta}"
"""
        model = genai.GenerativeModel('gemini-1.5-flash')
        resposta = model.generate_content(prompt)
        return jsonify({"resposta": resposta.text})
    except Exception as e:
        print(f"ERRO: {e}")
        return jsonify({"erro": "Erro ao processar a pergunta", "detalhes": str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True, port=5000)
